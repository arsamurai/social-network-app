{"version":3,"sources":["hoc/authRedirect.js","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Messages/Messages.jsx","Components/Dialogs/Dialogs.jsx","Redux/Dialogs-selectors.js","Components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedict","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","s","dialog","activeClassName","active","id","name","Messages","message","message__dialog","dialog__photo","src","dialogPhoto","alt","dialog__name","dialogName","message__text","maxLength100","maxLength","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","addnewMessage","Field","write__message","component","Textarea","placeholder","validate","required","add__message","Dialogs","dialogElements","dialogsData","map","el","messagesElements","messagesData","photo","authorName","dialogs","title","dialogs__items","dialogs__persons","messages","values","addMessage","newMessageText","getDialogsData","dialogsPage","getMessagesData","compose"],"mappings":"oPAIMA,EAA2B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAG,eAHR,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAkCL,K,oBCf3EM,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,MAAQ,uBAAuB,iBAAmB,kCAAkC,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,gBAAkB,iCAAiC,cAAgB,+BAA+B,aAAe,8BAA8B,cAAgB,+BAA+B,cAAgB,+BAA+B,eAAiB,gCAAgC,aAAe,gC,2FCa/jBC,EAVI,SAACN,GAClB,OACE,qBAAKO,UAAWC,IAAEC,OAAlB,SACE,cAAC,IAAD,CAASC,gBAAiBF,IAAEG,OAAQV,GAAI,YAAcD,EAAMY,GAA5D,SACGZ,EAAMa,UCOAC,EAZE,SAACd,GAChB,OACE,sBAAKO,UAAWC,IAAEO,QAAlB,UACE,sBAAKR,UAAWC,IAAEQ,gBAAlB,UACE,qBAAKT,UAAWC,IAAES,cAAeC,IAAKlB,EAAMmB,YAAaC,IAAI,KAC7D,qBAAKb,UAAWC,IAAEa,aAAlB,SAAiCrB,EAAMsB,gBAEzC,qBAAKf,UAAWC,IAAEe,cAAlB,SAAkCvB,EAAMe,c,iCCF1CS,EAAeC,YAAU,KAiBzBC,EAAsBC,YAAU,CAClCC,KAAM,cADkBD,EAfH,SAAC3B,GACtB,OACE,uBAAM6B,SAAU7B,EAAM8B,aAAcvB,UAAWC,IAAEuB,cAAjD,UACE,cAACC,EAAA,EAAD,CACEzB,UAAWC,IAAEyB,eACbC,UAAWC,IACXtB,KAAK,iBACLuB,YAAY,wBACZC,SAAU,CAACC,IAAUd,KAEvB,wBAAQjB,UAAWC,IAAE+B,aAArB,wBAuCSC,EA9BC,SAACxC,GACf,IAAIyC,EAAiBzC,EAAM0C,YAAYC,KAAI,SAACC,GAAD,OACzC,cAAC,EAAD,CAAY/B,KAAM+B,EAAG/B,KAAMD,GAAIgC,EAAGhC,QAGhCiC,EAAmB7C,EAAM8C,aAAaH,KAAI,SAACC,GAAD,OAC5C,cAAC,EAAD,CACEzB,YAAayB,EAAGG,MAChBzB,WAAYsB,EAAGI,WACfjC,QAAS6B,EAAG7B,aAShB,OACE,sBAAKR,UAAWC,IAAEyC,QAAlB,UACE,oBAAI1C,UAAWC,IAAE0C,MAAjB,qBACA,sBAAK3C,UAAWC,IAAE2C,eAAlB,UACE,qBAAK5C,UAAWC,IAAE4C,iBAAlB,SAAqCX,IACrC,qBAAKlC,UAAWC,IAAE6C,SAAlB,SAA6BR,OAE/B,cAACnB,EAAD,CAAqBG,SAZL,SAACyB,GACnBtD,EAAMuD,WAAWD,EAAOE,gBACxBF,EAAOE,eAAiB,U,yBC5CfC,EAAiB,SAAChE,GAC3B,OAAOA,EAAMiE,YAAYhB,aAGhBiB,EAAkB,SAAClE,GAC5B,OAAOA,EAAMiE,YAAYZ,cCkDdc,sBACbzD,aAnBsB,SAACV,GACvB,MAAO,CACLiD,YAAae,EAAehE,GAC5BqD,aAAca,EAAgBlE,MAgBP,CACvB8D,iBAEF3D,IAJagE,CAKbpB","file":"static/js/6.0b174f6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedict = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedict)(RedirectComponent);\r\n\r\n    return connectedAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__items\":\"Dialogs_dialogs__items__1cdlC\",\"title\":\"Dialogs_title__3vktx\",\"dialogs__persons\":\"Dialogs_dialogs__persons__FWy2S\",\"dialog\":\"Dialogs_dialog__OujR6\",\"active\":\"Dialogs_active__Sef-6\",\"messages\":\"Dialogs_messages__oDujE\",\"message\":\"Dialogs_message__2z79b\",\"message__dialog\":\"Dialogs_message__dialog__2FSvu\",\"dialog__photo\":\"Dialogs_dialog__photo__2UWZP\",\"dialog__name\":\"Dialogs_dialog__name__17-3c\",\"message__text\":\"Dialogs_message__text__3S6Q5\",\"addnewMessage\":\"Dialogs_addnewMessage__27bWG\",\"write__message\":\"Dialogs_write__message__3Z1Re\",\"add__message\":\"Dialogs_add__message__2LfjU\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink activeClassName={s.active} to={\"/dialogs/\" + props.id}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Messages = (props) => {\r\n  return (\r\n    <div className={s.message}>\r\n      <div className={s.message__dialog}>\r\n        <img className={s.dialog__photo} src={props.dialogPhoto} alt=\"\" />\r\n        <div className={s.dialog__name}>{props.dialogName}</div>\r\n      </div>\r\n      <div className={s.message__text}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLength } from \"../../utils/validators\";\r\nimport { Textarea } from \"../Common/FormControls/FormsControls\";\r\n\r\nlet maxLength100 = maxLength(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.addnewMessage}>\r\n      <Field\r\n        className={s.write__message}\r\n        component={Textarea}\r\n        name=\"newMessageText\"\r\n        placeholder=\"Enter your message...\"\r\n        validate={[required, maxLength100]}\r\n      />\r\n      <button className={s.add__message}>Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddMessageReduxForm = reduxForm({\r\n  form: \"addMessage\",\r\n})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogElements = props.dialogsData.map((el) => (\r\n    <DialogItem name={el.name} id={el.id} />\r\n  ));\r\n\r\n  let messagesElements = props.messagesData.map((el) => (\r\n    <Messages\r\n      dialogPhoto={el.photo}\r\n      dialogName={el.authorName}\r\n      message={el.message}\r\n    />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageText);\r\n    values.newMessageText = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <h3 className={s.title}>Dialogs</h3>\r\n      <div className={s.dialogs__items}>\r\n        <div className={s.dialogs__persons}>{dialogElements}</div>\r\n        <div className={s.messages}>{messagesElements}</div>\r\n      </div>\r\n      <AddMessageReduxForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","export const getDialogsData = (state) => {\r\n    return state.dialogsPage.dialogsData\r\n}\r\n\r\nexport const getMessagesData = (state) => {\r\n    return state.dialogsPage.messagesData\r\n}","import React from \"react\";\r\nimport { addMessage } from \"../../Redux/Dialogs-reducer\";\r\n//import StoreContext from \"../../StoreContext\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/authRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getDialogsData, getMessagesData } from \"../../Redux/Dialogs-selectors\";\r\n\r\n// const DialogsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {({ store }) => {\r\n//         let state = store.getState().dialogsPage;\r\n\r\n//         let onAddMessage = () => {\r\n//           store.dispatch(addMessageActionCreator());\r\n//         };\r\n\r\n//         let onMessageChange = (message) => {\r\n//           let action = updateNewMessageTextActionCreator(message);\r\n//           store.dispatch(action);\r\n//         };\r\n//         return (\r\n//           <Dialogs\r\n//             updateNewMessageText={onMessageChange}\r\n//             addMessage={onAddMessage}\r\n//             newMessageText={state.newMessageText}\r\n//             dialogsData={state.dialogsData}\r\n//             messagesData={state.messagesData}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: getDialogsData(state),\r\n    messagesData: getMessagesData(state),\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addMessage: () => {\r\n//       dispatch(addMessageActionCreator());\r\n//     },\r\n//     updateNewMessageText: (message) => {\r\n//       dispatch(updateNewMessageTextActionCreator(message));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}