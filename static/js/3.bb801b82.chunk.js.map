{"version":3,"sources":["hoc/authRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/MyPosts/MyPosts.module.css","Components/MyPosts/Post/Post.module.css","Images/background.jpg","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/MyPosts/Post/Post.jsx","Components/MyPosts/MyPosts.jsx","Components/Profile/Profile.jsx","Redux/Profile-selectors.js","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedict","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatus","status","editMode","activeEditMode","setState","deActiveEditMode","updateStatus","onStatusChange","e","currentTarget","prevProps","prevState","onDoubleClick","className","s","status__input","onChange","autoFocus","onBlur","ProfileDataFormReduxForm","reduxForm","form","onSubmit","handleSubmit","user__description","user__name","createField","fullName","Input","user__info","info__item","keys","profile","contacts","map","key","contactTitle","contactValue","lookingForAJob","lookingForAJobBox","type","lookingForAJobDescription","Textarea","aboutMe","saveBtn","ProfileData","Contacts","ProfileInfo","useState","setEditMode","profile__user","src","background","user__background","user__main","user__left","photos","large","user_photo","user__ava","isOwner","editBlock","editBtn","onClick","user__right","initialValues","formData","saveProfile","then","Post","post","ava","alt","post__ava","post__info","post__message","message","post__like","likeCount","maxLength30","maxLength","AddPostReduxForm","new__post","Field","write__post","component","name","placeholder","validate","required","add__post","MyPosts","memo","console","log","postElements","postData","el","my__posts","title","values","addPost","newPostText","Profile","Preloader","getProfile","profilePage","getStatus","getPostData","getAutorithedUserId","userId","getIsAuth","ProfileContainer","match","params","autorithedUserId","history","getUserProfile","getUserStatus","refreshProfile","compose","withRouter"],"mappings":"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","file":"static/js/3.bb801b82.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedict = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedict)(RedirectComponent);\r\n\r\n    return connectedAuthRedirectComponent;\r\n}\r\n\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__background\":\"ProfileInfo_user__background__BafJ3\",\"user__main\":\"ProfileInfo_user__main__MNIV0\",\"user__ava\":\"ProfileInfo_user__ava__bTW3x\",\"user__description\":\"ProfileInfo_user__description__2CuTi\",\"user__name\":\"ProfileInfo_user__name__3FRmw\",\"user__info\":\"ProfileInfo_user__info__3z6GR\",\"info__item\":\"ProfileInfo_info__item__3n7Pf\",\"status__input\":\"ProfileInfo_status__input__3iu0j\",\"contacts\":\"ProfileInfo_contacts__UIpSw\",\"contactTitle\":\"ProfileInfo_contactTitle__2dHLk\",\"fullName\":\"ProfileInfo_fullName__39vJw\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__2-lJB\",\"lookingForAJobBox\":\"ProfileInfo_lookingForAJobBox__1VHLN\",\"contactValue\":\"ProfileInfo_contactValue__36miG\",\"aboutMe\":\"ProfileInfo_aboutMe__3O0jc\",\"lookingForAJobDescription\":\"ProfileInfo_lookingForAJobDescription__2x0AG\",\"editBtn\":\"ProfileInfo_editBtn__17Jqq\",\"saveBtn\":\"ProfileInfo_saveBtn__1Nb1K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my__posts\":\"MyPosts_my__posts__3TYhZ\",\"title\":\"MyPosts_title__1F5BT\",\"new__post\":\"MyPosts_new__post__10mN5\",\"write__post\":\"MyPosts_write__post__13nGs\",\"add__post\":\"MyPosts_add__post__1IOxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1Oc3-\",\"post__ava\":\"Post_post__ava__2-nAa\",\"post__info\":\"Post_post__info__Y5ig7\",\"post__message\":\"Post_post__message__odJR9\",\"post__like\":\"Post_post__like__W2URF\"};","export default __webpack_public_path__ + \"static/media/background.277161b0.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    status: this.props.status,\r\n    editMode: false,\r\n  };\r\n\r\n  activeEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  };\r\n\r\n  deActiveEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {!this.state.editMode && (\r\n            <div>\r\n              <span onDoubleClick={this.activeEditMode}>\r\n                {this.state.status}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {this.state.editMode && (\r\n            <div>\r\n              <input\r\n                className={s.status__input}\r\n                onChange={this.onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={this.deActiveEditMode}\r\n                value={this.state.status}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea,\r\n} from \"../../Common/FormControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.user__description}>\r\n      <h3 className={s.user__name}>\r\n        {createField(\"\", s.fullName, \"fullName\", Input, \"Full name\", [])}\r\n      </h3>\r\n      <ul className={s.user__info}>\r\n        {props.status && (\r\n          <li className={s.info__item}>\r\n            Status:\r\n            <p>\r\n              {\r\n                <ProfileStatus\r\n                  status={props.status}\r\n                  updateStatus={props.updateStatus}\r\n                />\r\n              }\r\n            </p>\r\n          </li>\r\n        )}\r\n        <li className={s.info__item}>\r\n          Contacts:{\" \"}\r\n          {Object.keys(props.profile.contacts).map((key) => {\r\n            return (\r\n              <div className={s.contacts}>\r\n                <div className={s.contactTitle}>\r\n                  {key}:{\" \"}\r\n                  {createField(\r\n                    \"\",\r\n                    s.contactValue,\r\n                    \"contacts.\" + key,\r\n                    Input,\r\n                    key,\r\n                    []\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </li>\r\n        <li className={s.info__item}>\r\n          Job:{\" \"}\r\n          {createField(\r\n            s.lookingForAJob,\r\n            s.lookingForAJobBox,\r\n            \"lookingForAJob\",\r\n            Input,\r\n            \"\",\r\n            [],\r\n            {\r\n              type: \"checkbox\",\r\n            }\r\n          )}\r\n        </li>\r\n        <li className={s.info__item}>\r\n          Skills:{\" \"}\r\n          <div>\r\n            {createField(\r\n              \"\",\r\n              s.lookingForAJobDescription,\r\n              \"lookingForAJobDescription\",\r\n              Textarea,\r\n              \"It`s absent\",\r\n              []\r\n            )}\r\n          </div>\r\n        </li>\r\n        <li className={s.info__item}>\r\n          About me:{\" \"}\r\n          <div>\r\n            {createField(\"\", s.aboutMe, \"aboutMe\", Textarea, \"It`s absent\", [])}\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <button className={s.saveBtn}>Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport background from \"../../../Images/background.jpg\";\r\nimport user_photo from \"../../../Images/friend.jpg\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={s.profile__user}>\r\n      <img src={background} className={s.user__background} />\r\n      <div className={s.user__main}>\r\n        <div className={s.user__left}>\r\n          <img\r\n            src={\r\n              props.profile.photos.large != null\r\n                ? props.profile.photos.large\r\n                : user_photo\r\n            }\r\n            className={s.user__ava}\r\n          />\r\n          {props.isOwner &&\r\n            (editMode ? (\r\n              <div className={s.editBlock}>\r\n                <button\r\n                  className={s.editBtn}\r\n                  onClick={() => {\r\n                    setEditMode(false);\r\n                  }}\r\n                >\r\n                  Exit\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className={s.editBlock}>\r\n                <button\r\n                  className={s.editBtn}\r\n                  onClick={() => {\r\n                    setEditMode(true);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className={s.user__right}>\r\n          {editMode ? (\r\n            <ProfileDataFormReduxForm\r\n              initialValues={props.profile}\r\n              onSubmit={onSubmit}\r\n              {...props}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              profile={props.profile}\r\n              isOwner={props.isOwner}\r\n              {...props}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = (props) => {\r\n  return (\r\n    <div className={s.user__description}>\r\n      <h3 className={s.user__name}>{props.profile.fullName}</h3>\r\n      <ul className={s.user__info}>\r\n        {props.status && (\r\n          <li className={s.info__item}>\r\n            Status:\r\n            <p>\r\n              {\r\n                <ProfileStatus\r\n                  status={props.status}\r\n                  updateStatus={props.updateStatus}\r\n                />\r\n              }\r\n            </p>\r\n          </li>\r\n        )}\r\n        <li className={s.info__item}>\r\n          Contacts:{\" \"}\r\n          {Object.keys(props.profile.contacts).map((key) => {\r\n            return (\r\n              <Contacts\r\n                key={key}\r\n                contactTitle={key}\r\n                contactValue={props.profile.contacts[key]}\r\n              />\r\n            );\r\n          })}\r\n        </li>\r\n        <li className={s.info__item}>\r\n          Job: <p>{props.profile.lookingForAJob ? \"Yes\" : \"No\"}</p>\r\n        </li>\r\n        <li className={s.info__item}>\r\n          Skills:\r\n          <p>\r\n            {props.profile.lookingForAJobDescription\r\n              ? props.profile.lookingForAJobDescription\r\n              : \"It`s absent\"}\r\n          </p>\r\n        </li>\r\n        <li className={s.info__item}>\r\n          About me:\r\n          <p>{props.profile.aboutMe ? props.profile.aboutMe : \"It`s absent\"}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contacts}>\r\n      <div className={s.contactTitle}>\r\n        {contactTitle}: <div className={s.contactValue}> {contactValue}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n      <img src={props.ava} alt=\"\" className={s.post__ava} />\r\n      <div className={s.post__info}>\r\n        <div className={s.post__message}>{props.message}</div>\r\n        <div className={s.post__like}>Like: {props.likeCount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLength } from \"../../utils/validators\";\r\nimport { Textarea } from \"../Common/FormControls/FormsControls\";\r\nimport user_photo from \"../../Images/friend.jpg\";\r\n\r\nlet maxLength30 = maxLength(30);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.new__post}>\r\n      <Field\r\n        className={s.write__post}\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        placeholder=\"Your news...\"\r\n        validate={[required, maxLength30]}\r\n      />\r\n      <button className={s.add__post}>Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n  form: \"addPost\",\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"RENDER YO\");\r\n\r\n  let postElements = props.postData.map((el) => (\r\n    <Post\r\n      ava={\r\n        props.profile.photos.large != null\r\n          ? props.profile.photos.large\r\n          : user_photo\r\n      }\r\n      message={el.message}\r\n      likeCount={el.likeCount}\r\n    />\r\n  ));\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n    values.newPostText = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={s.my__posts}>\r\n      <h3 className={s.title}>My posts</h3>\r\n      <AddPostReduxForm onSubmit={addNewPost} />\r\n      {postElements}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"../MyPosts/MyPosts\";\r\nimport Preloader from \"../Common/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPosts\r\n        profile={props.profile}\r\n        addPost={props.addPost}\r\n        postData={props.postData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export const getProfile = (state) => {\r\n    return state.profilePage.profile\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status\r\n}\r\n\r\nexport const getPostData = (state) => {\r\n    return state.profilePage.postData\r\n}\r\n\r\nexport const getAutorithedUserId = (state) => {\r\n    return state.auth.userId\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateStatus,\r\n  addPost,\r\n  saveProfile,\r\n} from \"../../Redux/Profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/authRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getProfile,\r\n  getStatus,\r\n  getAutorithedUserId,\r\n  getIsAuth,\r\n  getPostData,\r\n} from \"../../Redux/Profile-selectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorithedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        addPost={this.props.addPost}\r\n        saveProfile={this.props.saveProfile}\r\n        postData={this.props.postData}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: getProfile(state),\r\n  status: getStatus(state),\r\n  autorithedUserId: getAutorithedUserId(state),\r\n  isAuth: getIsAuth(state),\r\n  postData: getPostData(state),\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    addPost,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}